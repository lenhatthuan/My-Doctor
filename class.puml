@startuml MobileApp
enum Enum{
    APIUrl
    Header
    Role
    Gender
    PositionState
    Emotion
    FirebaseConfig
}

class NavOTPComponent{
    # name : String
    - username : String
    - password : String
    # check(username,password)
}

class SigninScreen{

}

class AuthOTPScreen{
    - action : String
    - phone: String
    - password: String
    - verificationCode : String   
    - sendOTP (phone)
    - authOTP (action, phone, password, verificationCode) 
}
class HomeScreen{

}
class ChangPassScreen{
    - oldPass : String
    - newPass : String
    - confirmPass : String
    - captcha : String
    - code : String
    - randomCaptcha()
    - changePass()
    - clear()
}
class ProfileScreen{
    - pickImage()
    - selectDate()
    - updateProfile()
}

class MainFollowHeathyComponent {

}

class BMIComponent {

}

class HeartComponent {
    
}

class EmotionComponent {
    
}

class AddFitlerComponent {}
class AddBMIComponent {}
class HistoryBMIComponent {}
class DateHistoryBMIComponent {}
class ListBMIComponent {}

class AddFitlerComponent {}
class AddHeartComponent {}
class HistoryHeartComponent {}
class DateHistoryHeartComponent {}
class ListHeartComponent {}

class ProfileDoctorScreen {}
class DoctorScheduleScreen {}
class AllDoctorScreen {}

class AccountController{
    + isAccount(usename, password): boolean
    + signin(username, password)
    + saveAccountToStorage(account)
    + signup(username, password)
    + forgotPass(username,password)
    + changePass(account, oldPass, newPass)
    + isLogin(): boolean
    + logout(): void
}
class PatientController{
    + getProfile(id): patient
    + saveProfiletoStorage(patient)
    + setProfile(patient)
}

class DoctorController{
    + getAll()
}

class RoomController{
    + getRoomsByDepartment(department)
    + getRoomByID(id)
}

class PositionController{
    + getPositionsByPatient(patientId)
    + createPosition(position)
    + cancelPosition(id)
    + expiredPosition(patientId)
}

class RecordController{
    + getPositionsByPatient(patientId)
}

class heartController{
    + createHeart(HeartBeat)
    + getAllHeart(patientId)
}

class bmiController{
    + createBMI(bmi)
    + getAllBMI(patientId)
}

class scheduleController{
    + getAllScheduleByDoctorId(doctorId)
}

class Schedule {
    + id: String
    + doctorId: String
    + roomId: String
    + day: String
    + session: String
}

class HeartBeat{ 
    + id : String
    + patientId : String
    + createdAt : Date
    + systole: float
    + diastole : float
    + heatBeat: float
}

class BMI{
    + id : String
    + patientId : String
    + createdAt : Date
    + tall: float
    + weigh : float
    + bmi: float
}

class Account{
    + id : String
    + username: String
    + password: String
    + role : Role
}
class Patient{
    + id : String
    + avatar : String
    + fullName : String
    + birthDate : Date
    + gender : Gender
    + address : String
}
class Department{
    + id : String
    + name : String
}
class Doctor{
    + id : String
    + avatar : String
    + fullName : String
    + birthDate : Date
    + gender : Gender
    + department : String
}
class Room{
    + id : String
    + name : String
    + department : String
}
class Position{
    + id : String
    + number : int
    + patientId : String
    + roomId : String
    + state : PositionState
}
class Record{
    + id : String
    + patientId : String
    + doctorId : String
    + name : String
    + precription : String
    + fileStore: String
}


AllDoctorScreen -- DoctorController
DoctorScheduleScreen -- scheduleController
DoctorScheduleScreen -- PositionController
DoctorScheduleScreen -- RoomController
ProfileDoctorScreen -- scheduleController


ListHeartComponent -- heartController
ListBMIComponent -- bmiController
HistoryBMIComponent -- bmiController
HistoryHeartComponent -- heartController
MainFollowHeathyComponent -- heartController
MainFollowHeathyComponent -- bmiController
AddBMIComponent -- bmiController
AddHeartComponent -- heartController

ListHeartComponent -- AddFitlerComponent
ListHeartComponent "1"-- "many" DateHistoryHeartComponent
HistoryHeartComponent <|-- DateHistoryHeartComponent
HeartComponent -- HistoryHeartComponent

ListBMIComponent -- AddFitlerComponent
ListBMIComponent "1"-- "many" DateHistoryBMIComponent
HistoryBMIComponent <|-- DateHistoryBMIComponent
BMIComponent -- HistoryBMIComponent

MainFollowHeathyComponent  <|-- BMIComponent
MainFollowHeathyComponent  <|-- HeartComponent
MainFollowHeathyComponent <|-- EmotionComponent


NavOTPComponent <|-- SignupScreen
NavOTPComponent <|-- ForgotPassScreen
SignupScreen *-- AuthOTPScreen
ForgotPassScreen *-- AuthOTPScreen

DoctorComponent "many" -- "1" DoctorListComponent
DoctorListComponent -- MedicalBookingScreen
DepartmentComponent "many" -- "1" DepartmentListComponent
DepartmentListComponent -- MedicalBookingScreen
BookingConponent -- MedicalBookingScreen

PositionComponent "many" -- "1" PositionScreen
RecordComponent "many" -- "1" MedicalRecordScreen

SigninScreen --- AccountController
SignupScreen --- AccountController
ForgotPassScreen --- AccountController
AuthOTPScreen -- AccountController
HomeScreen --- AccountController
ChangPassScreen --- AccountController

ProfileScreen --- PatientController
DoctorListComponent --- DoctorController

BookingConponent --- PositionController
BookingConponent --- RoomController
PositionScreen --- PositionController

MedicalRecordScreen --- RecordController

AccountController -- Account
PatientController -- Patient
RoomController -- Room
DoctorController -- Doctor
PositionController -- Position
RecordController -- Record

Patient "1" - "1" Account
Account "1" - "1" Doctor
Doctor "many" -- "1" Department
Room "many" -- "1" Department
Patient "1" - "many" Position
Room "1" - "many" Position
Record "many" - "1" Patient
Record "many" - "1" Doctor

BMI "many" - "1" Patient
HeartBeat "many" - "1" Patient
Schedule "many" - "many" Doctor
Schedule "many" - "many" Room


@enduml

